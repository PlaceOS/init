#! /usr/bin/env bash
set -e

influx_key_env=".env.influxdb"
chronograf_token_secret=".env.chronograf"
secret_key_env=".env.secret_key"
public_key_env=".env.public_key"
env=".env"

set -a
if [[ -f "${influx_key_env}" ]]; then
    . ${influx_key_env}
fi
if [[ -f "${chronograf_token_secret}" ]]; then
    . ${chronograf_token_secret}
fi
if [[ -f "${secret_key_env}" ]]; then
    . ${secret_key_env}
fi
if [[ -f "${public_key_env}" ]]; then
    . ${public_key_env}
fi

. ${env}
set +a

if [[ -z "${TOKEN_SECRET}" ]]; then
  TOKEN_SECRET=$(openssl rand -base64 256 | tr -d '\n')

  # Write the new secret to an env file
  echo "TOKEN_SECRET=${TOKEN_SECRET}" > "$chronograf_token_secret"
  echo "generated Chrongraf TOKEN_SECRET"
else
  echo "already generated Chrongraf TOKEN_SECRET"
fi

if [[ -z "${INFLUX_API_KEY}" ]]; then
  INFLUX_API_KEY=$(openssl rand -base64 24)
  echo "INFLUX_API_KEY=${INFLUX_API_KEY}" > "$influx_key_env"   # for Source
  echo "INFLUXDB_TOKEN=${INFLUX_API_KEY}" >> "$influx_key_env"  # for Chronograf
  echo "generated INFLUX_API_KEY"
else
  echo "already generated INFLUX_API_KEY"
fi

if [[ -z "${JWT_PUBLIC}" || -z "${JWT_SECRET}" ]]; then
  dir=$(mktemp -d)

  ssh-keygen -t rsa -b 4096 -m PEM -f "${dir}/secret" -N "" &> /dev/null
  openssl rsa -in "${dir}/secret" -pubout -outform PEM -out "${dir}/public" 0>&- &> /dev/null

  secret="$(base64 -w 0 -i "${dir}/secret")"
  secret_env_key="JWT_SECRET=${secret}"
  server_secret_env_key="SECRET_KEY_BASE=${secret}"
  echo ${secret_env_key} > $secret_key_env
  echo ${server_secret_env_key} >> $secret_key_env

  public_env_key="JWT_PUBLIC=$(base64 -w 0 -i "${dir}/public")"
  echo $public_env_key > $public_key_env

  echo "generated JWT_SECRET and JWT_PUBLIC"

  rm -r "${dir}"
else
  echo "already generated JWT_SECRET and JWT_PUBLIC"
fi

if [[ ! -f .htpasswd-kibana ]]; then
  htpasswd -bB -c .htpasswd-kibana $PLACE_EMAIL $PLACE_PASSWORD
  echo "generated kibana basic auth"
else
  echo "already generated kibana basic auth"
fi
